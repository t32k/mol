<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>MOL</title>
        <generator uri="https://gohugo.io">Hugo</generator>
        <link>https://t32k.me/mol/</link>
        <language>ja</language>
        
        
        <updated>Sun, 22 Apr 2018 00:00:00 UTC</updated>
        
        <item>
            <title>捨てられる銀行</title>
            <link>https://t32k.me/mol/log/978-4062883696-local-bank/</link>
            <pubDate>Sun, 22 Apr 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/978-4062883696-local-bank/</guid>
            <description>&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4062883694/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/51m-zeyXUIL._SX304_BO1,204,203,200_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;捨てられる銀行 (講談社現代新書)&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;橋本 卓典&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;銀行っていうか、森信親金融庁長官が行う金融改革目線で書かれてる。最後の方に優秀な銀行の取り組みについて解説してある（地元、北國銀行が取り上げられていてちょっと嬉しかった）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://t32k.me/mol/mol/log/b076m92fck-fsa/&#34;&gt;金融庁の基礎知識&lt;/a&gt;でも読んだが、金融庁は俗に言う金融&lt;strong&gt;処分庁&lt;/strong&gt;から金融&lt;strong&gt;育成庁&lt;/strong&gt;へと大きく方向転換しようとしていている。だが、長い間マニュアル的なお作法に慣れている金融庁職員も、それに従ってきた銀行員も、森長官が求める理想には程遠い。&lt;/p&gt;

&lt;p&gt;そうゆうわけで、地銀で活躍している人物を金融庁へとヘッドハンティングしてきたり、無駄が多くてコストのかかる金融検査マニュアルを廃止しようとしたり、奮闘するわけだ。&lt;/p&gt;

&lt;p&gt;そもそも、銀行なんてものは私みたいな個人にとっては給与の振込口座に指定するだけの存在であり、何をやってるのか分からない。強いてゆうなら半沢直樹に出てくるような悪そうな人物のイメージでしかない。&lt;/p&gt;

&lt;p&gt;目指すべき理想は半沢直樹のように、ただの数字上の財務評価だけでなく、融資先の事業への理解など事業性評価もして地域経済の発展を一緒につくっていくべき存在だ。&lt;/p&gt;

&lt;p&gt;森長官の改革の内容を知るとともに、地方銀行の実情を知ることができる良書だ。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>フィンテック (日経文庫)</title>
            <link>https://t32k.me/mol/log/978-4532113605-fintech/</link>
            <pubDate>Wed, 11 Apr 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/978-4532113605-fintech/</guid>
            <description>&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4532113601/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/413OvIyHIkL._SX303_BO1,204,203,200_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;フィンテック (日経文庫)&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;柏木亮二&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;FinTechやっていきたいと思っても、今までは仮想通貨一辺倒だったので、ちょっと全体を俯瞰するために、知人の間でも評判がよかった本書を購入。&lt;/p&gt;

&lt;p&gt;クラウド会計としてfreeeやマネーフォワードは知ってはいるが、海外のFinTechサービスはほとんど知らないというか、そもそも法律的に日本でサービス展開できなかったりするからしょうがなかったりするんだけど、本書はそうゆうサービスをいろいろ紹介してくれていてありがたい。知らないサービスも多かった。&lt;/p&gt;

&lt;p&gt;FinTechの正式な定義というのはないが、金融庁の金融審議会のレポートによれば、こう報告されている。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ITを活用した革新的な金融サービス事業を指す。特に近年は海外を中心にITベンチャー企業が、IT技術を活かして伝統的な銀行等が提供していない金融サービスを提供する動きが活発している。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とあるように、IT企業が銀行の一部のサービスを切り出し（アンバンドリング）、使いやすいアプリを提供しているモノが多い。&lt;/p&gt;

&lt;p&gt;個人的な感覚としては、これらのサービスを使っているのは比較的若い世代のように感じる。年代別の保有金融資産シェアの8割以上が50歳以上ということで、もっとこの分野は伸びしろがあると思った。てか伸びしろしかない。&lt;/p&gt;

&lt;p&gt;あと興味深かったのはイノベーションのジレンマにも言及していたところだ。FinTechを手がけているのは若い企業であり、巨大（優良）企業が新興企業になぜ負けるのかは、昨今の中国のキャッシュレス化の急進にも通じるところがある。&lt;/p&gt;

&lt;p&gt;いろいろ思索に耽させてくれる良い本だった。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Japan Digital Design株式会社にジョインしました</title>
            <link>https://t32k.me/mol/log/japan-d2/</link>
            <pubDate>Mon, 02 Apr 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/japan-d2/</guid>
            <description>&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0402-00.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;去年から無職を続けていたけど仮想通貨が絶賛暴落中なので、さすがに真面目に働こうと思った。ので働く。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.japan-d2.com/&#34;&gt;Japan Digital Design株式会社&lt;/a&gt;に4月からお世話になることになった。&lt;/p&gt;

&lt;p&gt;個人的に今後、数年間はFinTechの分野に身を置いておきたいと考えていて、FinTechと言ってもまぁいろいろあるわけで、それこそブロックチェーンなど今よくわからんけどイケイケなものもあったりする。でも冷静になって考えてみると、もっとやるべきことが他にあるんじゃないかと思う。例えば、銀行のUIとかフローとかもっとマシなもの作れるんじゃないかとか。&lt;/p&gt;

&lt;p&gt;そういうわけで、JDD（Japan Digital Design）は、MUFGグループ会社なので、三菱UFJ銀行はもちろん、パートナーとして32の地銀さんと協力して、既存の金融の体験を改善・創造していく。いろんなプロトタイプを作ってスピーディに検証し、成功すれば前述のようなグループ・銀行全体に普及させていく算段だ。&lt;/p&gt;

&lt;p&gt;とはいっても、いろいろな制約であったり小回りがきかないこともあったりするだろうけど、とてもやりがいのある仕事だと思う。ただ圧倒的に人足りてないので、みんなも一緒に働こう（´；ω；｀）！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wantedly.com/projects/190901&#34;&gt;FinTechのUXに新風を吹き込むフロントエンドエンジニア募集 - Wantedly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wantedly.com/projects/191608&#34;&gt;試行錯誤を繰り返して新たなFinTech UXを模索するUXデザイナー募集 - Wantedly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.wantedly.com/companies/japan-d2&#34;&gt;Wantedly&lt;/a&gt;から応募してもいいし、&lt;a href=&#34;https://twitter.com/t32k&#34;&gt;@t32k&lt;/a&gt;に気軽に声かけてねm(_ _)m&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>デザイン組織のつくりかた</title>
            <link>https://t32k.me/mol/log/978-4802510837-org-design/</link>
            <pubDate>Sun, 11 Mar 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/978-4802510837-org-design/</guid>
            <description>&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4802510837/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/515p1Uo6rcL._SX350_BO1,204,203,200_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;デザイン組織のつくりかた&lt;br&gt;デザイン思考を駆動させるインハウスチームの構築＆運用ガイド&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;ピーター・メルホルツ&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;たまにはデザインの本を読んでみようかと手にとってみた。&lt;/p&gt;

&lt;p&gt;最初に断っておくけど、タイトルに『デザイン組織のつくりかた』と書いてあるからといって、あなたがデザイナーの部下を数十人、数百人抱えるようなデザイン部長である必要はない。&lt;/p&gt;

&lt;p&gt;本書はどのようにしたらデザインを組織全体に浸透させ、ワークさせるのか解説しているので、いちデザイナーとしてどのように自分が与えられた役割を果たすべきなのか理解することは非常に大切だ。&lt;/p&gt;

&lt;p&gt;また、あなたがデザイナーではなくエンジニアだとしても読んでおいて損はないだろう。デザインをエンジニアリングとして置き換えて読めば、十分エンジニアとしても、（組織論なので）役に立つことが書いてある。またデザイナーと一言でいっても、いろいろなデザイナーがいるので、その＊＊＊デザイナーの各肩書の説明もしてあるので、デザイナーを理解するのにもよいだろう。&lt;/p&gt;

&lt;p&gt;エンジニアの求人でよくネタにされる『フルスタックエンジニア』と同様に、デザイナーの求人においても『ユニコーンデザイナー』（コードもかけるデザイナー）なんていないから、そんなもの求めるな！それよりもここのデザイナーの強みを活かしてチームを作れ！と書いてあったのは、おもしろかった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;深く考えもせずにデザインとユーザーエクスペリエンスを一緒にしてしまうと、ユーザーエクスペリエンスに関連する他のすべての領域を軽視することになる。ユーザーエクスペリエンスはデザインだけでなく、エンジニアリング、マーケティング、顧客ケアなど、数多くの部門の貢献が結果となって表れたものだ。（中略）ユーザーエクスペリエンスはすべての人々の責務でなければならない。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;あと個人的に、UXデザインって言葉使ってなくて好感が持てた。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>SONY HUISを購入した</title>
            <link>https://t32k.me/mol/log/sony-huis-100rc/</link>
            <pubDate>Sat, 10 Mar 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/sony-huis-100rc/</guid>
            <description>&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0312-00.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;気づいたら、我が家にやたらリモコンが多いことに気づいた。最近流行りの、Google Homeで音声コントロールすれば良いのかもしれないけど、Nature Remoを友達に譲ってしまったので、どうしようもできない。&lt;/p&gt;

&lt;p&gt;そもそもモード切替とか小難しいのを音声コントロールするのには、いろいろ難があるし、声出したくない時とか不便だし。やっぱリモコンをまとめる物理リモコンが欲しいのだと思った。&lt;/p&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B076W2P8JW/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/51ipVXUZaWL._SX522_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;SONY HUIS-100RC ブラックモデル [学習機能/マクロ機能搭載] &lt;br&gt;ソニー 電子ペーパーマルチリモコン &lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;HUIS(ハウス)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;SONYからおしゃれなのがあった。たかがリモコンに２万後半とかどんだけ高いんだと思ったけど、テーブルの上で何個もリモコンが置いてあるのは精神衛生上よろしくないので、ここはしかたなくSONYに年貢を納めることにする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0312-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;シンプルな箱。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0312-02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;スマホサイズのKindleみたい。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0312-03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;充電はMicro-USBは悪い文明、破壊する！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0312-04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;リモコンの登録は、機器の種類とメーカーを選択して、電源ボタンが連動するか確認するだけで、だいたいいい感じで登録してくれる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0312-05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kindleっぽい（2回目）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0312-06.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これがっ！こうっ！&lt;/p&gt;

&lt;p&gt;あと別売りのクレードルを買えば、Bluetooth機器も操作できるとか。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>チャットデプロイしたい2018</title>
            <link>https://t32k.me/mol/log/chat-deploy/</link>
            <pubDate>Wed, 14 Feb 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/chat-deploy/</guid>
            <description>

&lt;p&gt;タイトルの通り、チャットデプロイしたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;開発環境 &lt;code&gt;master&lt;/code&gt;ブランチ&lt;/li&gt;
&lt;li&gt;QA環境 &lt;code&gt;deployment/qa&lt;/code&gt;ブランチ&lt;/li&gt;
&lt;li&gt;本番環境 &lt;code&gt;deployment/production&lt;/code&gt; ブランチ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自分のところは、上記みたいに環境とブランチがマッチングしていて、そのブランチにコミットなりマージするとCircleCIのほうでデプロイしてくれる。&lt;/p&gt;

&lt;p&gt;例えば、開発環境でおおかた確認してQA環境に反映したいときは&lt;code&gt;master&lt;/code&gt;から&lt;code&gt;deployment/qa&lt;/code&gt;にPRを作成しマージして、デプロイしてた。それめんどいので、そこをボットでやらせたいと思った。要はこうゆう感じ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;slack上から任意の言葉でbotにデプロイを指示する&lt;/li&gt;
&lt;li&gt;slackのbotがGitHub APIでプルリクエスト作成・マージを実行する&lt;/li&gt;
&lt;li&gt;CircleCIがGAEにデプロイする&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;https://t32k.me/mol/mol/log/circleci2-yml-nodejs/&#34;&gt;3.はもう出来てる&lt;/a&gt;ので、1.2.を見てみよう。&lt;/p&gt;

&lt;h2 id=&#34;1-slack-bot&#34;&gt;1. Slack Bot&lt;/h2&gt;

&lt;p&gt;SlackのBotってどうやって作るんだっけなー、Hubotってあったよなーと思いつつ、今はBotkitが安定して開発されているっぽいからそれを使う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://botkit.ai/&#34;&gt;Botkit: Building Blocks for Building Bots&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0214-00.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Custom Integrations &amp;gt; Botsからボットを登録して、API Tokenを取得しておく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/howdyai/botkit/blob/master/examples/slack_bot.js&#34;&gt;botkit/slack_bot.js at master · howdyai/botkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あとは、レポジトリのexamplesディレクトリのなかにあるslack_bot.jsに先程のトークンを渡して起動させればおｋ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;controller.hears([&#39;hello&#39;], &#39;direct_mention&#39;, (bot, message) =&amp;gt; {
    bot.reply(message, &#39;Hello!&#39;);
    // ここからGitHubのAPIを叩く
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;controller.hears&lt;/code&gt;でなんか受け取って、それで反応してあげれば良いのが分かる。&lt;/p&gt;

&lt;h2 id=&#34;2-github-apps&#34;&gt;2. GitHub Apps&lt;/h2&gt;

&lt;p&gt;まぁGitHubでゴニョゴニョしたいので、GitHub API v3を叩く。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.github.com/v3/&#34;&gt;GitHub API v3 | GitHub Developer Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.jsのAPIクライアントはoctokitがよさそうってことで使ったのだが、Authenticationがむずい、ドハマリした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/octokit/rest.js&#34;&gt;octokit/rest.js: GitHub REST API client for Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まず、いろいろ認証の仕方が多い。どれを選べばいいんだ！一番簡単なのはPersonal access tokensだったけど、これだと僕のアカウントでプルリクエストが作成され、マージされてしまう。やはりBotとして実行してもらいたいので、だめ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/icoxfog417/items/fe411b94b8e7ae229e3e&#34;&gt;GitHubと連携する新しいアプリの形：GitHub Appsの作り方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを読む限り、GitHub Appsがいちばんオサレそうなので、この方法でやってみる。
GitHub Appsとして認証するためには、まず&lt;a href=&#34;https://jwt.io/introduction/&#34;&gt;JSON Web Token&lt;/a&gt;を作らないといけないらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-a-github-app&#34;&gt;Authentication options for GitHub Apps | GitHub Developer Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHubのドキュメント見ると、Rubyコードの例が書いてあるけど、Node.jsでやるにはどーしたらいいんだー！と悩んだあげく、こんな感じに書いた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const fs = require(&amp;quot;fs&amp;quot;);
const jwt = require(&amp;quot;jsonwebtoken&amp;quot;);
const key = fs.readFileSync(`${__dirname}/private-key.pem`);
const opts = { algorithm: &amp;quot;RS256&amp;quot; };
const payload = {
  iat: Math.floor(Date.now() / 1000) - 30,
  exp: Math.floor(Date.now() / 1000) + 60 * 10,
  iss: YOUR_ISSUE_NUMBER
};
const jwtToken = jwt.sign(payload, key, opts);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まずはGitHubのWebからGitHubAppsを登録する。パーミッションの設定も忘れなく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.github.com/v3/apps/permissions/&#34;&gt;GitHub App Permissions | GitHub Developer Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0214-01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;んでprivate-key.pemを生成しとく。それと、アプリの発行IDもその設定画面にあるのでメモっとく。あとは、&lt;code&gt;jsonwebtoken&lt;/code&gt;というnpmを使って、トークンを生成する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const octokit = require(&amp;quot;@octokit/rest&amp;quot;)({
  headers: {
    accept: &amp;quot;application/vnd.github.machine-man-preview+json&amp;quot;,
    authorization: `Bearer ${jwtToken}`
  }
});
const installationToken = await octokit.apps.createInstallationToken({
  installation_id: YOUR_INSTALLATION_ID
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0214-02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;んで、octokitを初期化するときに、&lt;code&gt;headers&lt;/code&gt;に先程のJWTトークンをBearerのあとにひっつける。&lt;code&gt;installation_id&lt;/code&gt;がなんぞやってことだけど、Appの設定のAdvancedでなんかアクセスがあるっぽいので、そこから知る。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;octokit.authenticate({
  type: &amp;quot;integration&amp;quot;,
  token: installationToken
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;んで、この&lt;code&gt;installationToken&lt;/code&gt;を&lt;code&gt;octokit.authenticate&lt;/code&gt;に渡してようやくAPIが叩けるようになる。PR作成したかったら&lt;code&gt;octokit.pullRequests.create(opts)&lt;/code&gt;とか叩けばよい。すごく長かった。。。&lt;/p&gt;

&lt;h2 id=&#34;google-compute-engine&#34;&gt;Google Compute Engine&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0214-03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;あとは、Botのメッセージを&lt;code&gt;attachments&lt;/code&gt;を使うとボットっぽくてよい。成功失敗とかバーの色変えられるのでよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bot.reply(message, {
  attachments: [
    {
      fallback: &amp;quot;Success&amp;quot;,
      color: &amp;quot;good&amp;quot;,
      title: `#${result.number} ${result.title}`,
      title_link: result.html_url,
      text: &amp;quot;プルリクできたのだー:smirk_cat:&amp;quot;
    }
  ]
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;んで、いつもBotとかホストするのにherokuにホストしてたけど、最近GCPまわり触ってるからせっかくなので、GCEにホストした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/operandoOS/items/01dd36264f735782f64b&#34;&gt;Google Compute Engine上でSlackのBotkitを動かすぞい！ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;すごく簡単だった。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;token=your_token nohup node slack_bot.js &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あとバックグラウンドでもプロセスを活かすためには、&lt;code&gt;nohup [command] &amp;amp;&lt;/code&gt;と打てばよいと教えてもらった。ありがとう。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>CircleCI 2.0でGAE/Node.jsのプロジェクトをデプロイ（改）</title>
            <link>https://t32k.me/mol/log/circleci2-yml-nodejs/</link>
            <pubDate>Tue, 30 Jan 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/circleci2-yml-nodejs/</guid>
            <description>

&lt;p&gt;&lt;a href=&#34;https://t32k.me/mol/mol/log/circleci2-yml/&#34;&gt;前回の記事&lt;/a&gt;で、CircleCIからGAEにNode.jsアプリをデプロイ方法を説明したのだけど、もっといい方法があるのではないかと思ってた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:8

    steps:
      - checkout
      - run:
          name: System information
          command: |
            echo &amp;quot;Node $(node -v)&amp;quot;
            echo &amp;quot;Yarn v$(yarn --version)&amp;quot;
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Build
          command: yarn run build
      - run:
          name: Test
          command: yarn test
      - save_cache:
          key: cache-{{ .Branch }}-{{ checksum &amp;quot;yarn.lock&amp;quot; }}
          paths:
            - ~/repo/.cache/yarn
            - ~/repo/dist
            - ~/repo/node_modules
            - ~/repo/package.json  
  
  deploy:
    working_directory: ~/repo
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - restore_cache:
          key: cache-{{ .Branch }}-{{ checksum &amp;quot;yarn.lock&amp;quot; }}
      - run:
          name: Deploy to Google App Engine
          command: |
            echo &amp;quot;$GOOGLE_AUTH&amp;quot; | base64 -i --decode &amp;gt; &amp;quot;$HOME/gcp-key.json&amp;quot;
            gcloud auth activate-service-account --key-file &amp;quot;$HOME/gcp-key.json&amp;quot;
            gcloud --quiet config set project &amp;quot;$GOOGLE_PROJECT_ID&amp;quot;
            gcloud --quiet app deploy app.yaml --version $(echo $CIRCLE_BRANCH | sed &amp;quot;s/\//\-/g&amp;quot;)
          no_output_timeout: 20m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;build&lt;/code&gt;と&lt;code&gt;deploy&lt;/code&gt;でDockerイメージが違うのが嫌だなーって思っていて、これをどうすうるのがいいんだろうと考えたら、やっぱり &lt;code&gt;circleci/node&lt;/code&gt;のイメージをベースに&lt;a href=&#34;https://cloud.google.com/sdk/downloads?hl=ja&#34;&gt;Google Cloud SDKをインストール&lt;/a&gt;したイメージを用意するのがいいんだろうと思ったけど、ぼくのDocker力が足りないので、うまくいかず、すぐ諦めた。&lt;/p&gt;

&lt;h2 id=&#34;google-cloud-sdk-インストール&#34;&gt;Google Cloud SDK インストール&lt;/h2&gt;

&lt;p&gt;そしたら去年の10月頃にこうゆうものが出ていたことを知る。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-sdk-npm-package&#34;&gt;GoogleCloudPlatform/cloud-sdk-npm-package: A metapackage that installs Google Cloud Platform&amp;rsquo;s gcloud CLI through NPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npmインストールでCloud SDKをインストールできる代物。うん便利。ローカルで試したところ本当にnpmインストールで、PATHも設定してないのに、&lt;code&gt;gcloud&lt;/code&gt;コマンドが打てた。&lt;/p&gt;

&lt;p&gt;CI上で試してみるとなぜかうまくいかない。&lt;code&gt;gcloud&lt;/code&gt;コマンドなんてないよ！と怒られる。どうやら、CircleCI上の&lt;code&gt;$SHELL&lt;/code&gt;の環境変数が&lt;code&gt;/bin/bash&lt;/code&gt;になってないと、うまく環境を認識できず（&lt;code&gt;zsh&lt;/code&gt;とか&lt;code&gt;fish&lt;/code&gt;と区別できない）、&lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-sdk-npm-package/blob/master/helpers-unix.js#L93&#34;&gt;PATHが設定できてないっぽい&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;なので、↓みたいに明示的に指定してあげる必要がある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;source ~/node_modules/@google-cloud/cloud-sdk/google-cloud-sdk/path.bash.inc&#39; &amp;gt;&amp;gt; $BASH_ENV
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というわけで、無事打てました。&lt;/p&gt;

&lt;h2 id=&#34;job間のデータ共有&#34;&gt;Job間のデータ共有&lt;/h2&gt;

&lt;p&gt;これで&lt;code&gt;circleci/node&lt;/code&gt;のイメージひとつだけ使えるようになった。勘違いしてたのだけど、前回のyamlでJob間dでデータ共有できなかったのはJobのDockerイメージが異なるものだからだと思っていたけど、そうではなかった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://circleci.com/blog/persisting-data-in-workflows-when-to-use-caching-artifacts-and-workspaces/&#34;&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0130-01.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;同じ（種類の）イメージでも、&lt;code&gt;build&lt;/code&gt;Jobで生成したデータを次の&lt;code&gt;deploy&lt;/code&gt;Jobには持ち越せない。通常データの共有はできない。そうゆうときはCachingを使えばよいのかと思っていたけど、微妙に違ってた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://circleci.com/blog/persisting-data-in-workflows-when-to-use-caching-artifacts-and-workspaces/&#34;&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0130-00.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cachingは異なるWorkflow間でのデータ共有であり、異なるJob間のデータ共有はWorkspaceという機能を使うのが正しい。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;persist_to_workspace&lt;/code&gt;という項目で、共有したいデータを指定し、&lt;code&gt;attach_workspace&lt;/code&gt;で取り出す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2

# =============================================
# References: Reusable Sets
# =============================================
references:
  container_config: &amp;amp;container_config
    docker:
      - image: circleci/node
    working_directory: ~/repo

  restore_npm: &amp;amp;restore_npm
    restore_cache:
      keys:
        - v1-cache-{{ arch }}-{{ .Branch }}-{{ checksum &amp;quot;package-lock.json&amp;quot; }}
        - v1-cache-{{ arch }}-{{ .Branch }}
        - v1-cache

# =============================================
# Jobs: Build and Deploy
# =============================================
jobs:
  build:
    &amp;lt;&amp;lt;: *container_config
    steps:
      - checkout
      - *restore_npm
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: v1-cache-{{ arch }}-{{ .Branch }}-{{ checksum &amp;quot;package-lock.json&amp;quot; }}
          paths:
            - node_modules
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: dist
          paths:
            - . 
      - run:
          name: Test
          command: npm test

  deploy:
    &amp;lt;&amp;lt;: *container_config
    steps:
      - checkout
      - *restore_npm
      - run:
          name: Set $PATH for `gcloud` command
          command: echo &#39;source /home/circleci/repo/node_modules/@google-cloud/cloud-sdk/google-cloud-sdk/path.bash.inc&#39; &amp;gt;&amp;gt; $BASH_ENV
      - attach_workspace:
          at: dist
      - run:
          name: Deploy to Google App Engine
          command: gcloud app deploy app.yaml
          no_output_timeout: 20m
          
# Workflowsの設定・・・
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というわけで、こんな感じになった。&lt;code&gt;&amp;amp;&lt;/code&gt;と&lt;code&gt;*&lt;/code&gt;は&lt;a href=&#34;https://qiita.com/gctfuji/items/5f8e4c5795ce41b214d1&#34;&gt;YAML記法&lt;/a&gt;アンカーとエイリアスで、変数っぽく使える。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/circleci/frontend/blob/master/.circleci/config.yml&#34;&gt;frontend/config.yml at master · circleci/frontend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あと、本家の本気のconfig.ymlを見て参考にしたが、Jobが分割されすぎて震えた。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>SeverとClientでレンダリング結果が違う</title>
            <link>https://t32k.me/mol/log/full-icu/</link>
            <pubDate>Fri, 19 Jan 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/full-icu/</guid>
            <description>&lt;p&gt;Reactをアイソモーフィックに実行しているのだけど、下記のようなエラーが出てた。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Warning: Text content did not match. Server: &amp;ldquo;1970-1-18 22:09&amp;rdquo; Client: &amp;ldquo;1970/1/18 22:09&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;SeverとClientでレンダリング結果が微妙に違うとのこと。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;new Intl.DateTimeFormat(locales, {
  year: &amp;quot;numeric&amp;quot;,
  month: &amp;quot;numeric&amp;quot;,
  day: &amp;quot;numeric&amp;quot;,
  hour: &amp;quot;numeric&amp;quot;,
  minute: &amp;quot;numeric&amp;quot;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;該当のコード。&lt;/p&gt;

&lt;p&gt;Node.js側の&lt;code&gt;Intl&lt;/code&gt;オブジェクトが対応していないのかなと思いつつ、Node v8だし結構新しいしなーと思っていて、原因がわからず、しばらく放っておいた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2018/0119-00.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/api/intl.html#intl_options_for_building_node_js&#34;&gt;Internationalization Support | Node.js v9.4.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あとで国際化のサポートがビルドの設定ごとで違うらしいと気づいた。デフォルトのビルドでは&lt;code&gt;--with-intl=small-icu&lt;/code&gt;というもので、部分的なサポートでしかない。それとは別に&lt;code&gt;full-icu&lt;/code&gt;という全サポートがあるらしく、これ入れたら、サーバーとクライアントでの差異はなくなった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodejs/node/wiki/Intl&#34;&gt;Intl · nodejs/node Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちなみにICUとは&lt;a href=&#34;http://site.icu-project.org/&#34;&gt;International Components for Unicode&lt;/a&gt;の略らしい。確かに全言語対応のデータ毎回入れてたら重いよね。&lt;/p&gt;

&lt;p&gt;Node.jsのバージョンマネージャーは&lt;code&gt;nvm&lt;/code&gt;使ってるんだけど、nvmインストールするときに下記のようなオプションつけると&lt;code&gt;full-icu&lt;/code&gt;でビルドしたものをインストールできる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nvm install -s v9.4.0 --with-intl=full-icu --download=all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でもこれだと毎バージョンごとにICUのデータ入れないといけないからめんどいよね。あとGAE Node.jsのインスタンスとかどこでNode.jsのビルドしてんだ？って感じなので、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/unicode-org/full-icu-npm&#34;&gt;unicode-org/full-icu-npm: npm module to autoload full ICU data.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;後づけで言語データをインストールができるnpmがある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NODE_ICU_DATA=node_modules/full-icu/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あとは環境変数&lt;code&gt;NODE_ICU_DATA&lt;/code&gt;にfull-icuの言語データへのパスを設定するだけでよい。&lt;/p&gt;

&lt;p&gt;国際化とかホント苦手だわと思ったけど、今回の場合、日付の&lt;code&gt;/&lt;/code&gt;と&lt;code&gt;-&lt;/code&gt;が違うだけだったので、あんまり考えがめぐらなかったのが反省点。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>2018年の抱負</title>
            <link>https://t32k.me/mol/log/new-years-resolutions-2018/</link>
            <pubDate>Mon, 01 Jan 2018 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/new-years-resolutions-2018/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://t32k.me/mol/mol/log/new-years-resolutions-2017/&#34;&gt;去年の抱負&lt;/a&gt;は、そうそうに達成してしまった。というか、2016年の段階で予約を済ましており、あとは飛行機に乗るだけだったので、目標達成というか予定通りことが進んだだけである。&lt;/p&gt;

&lt;p&gt;ということで、最近は旅行系ブロガーになっているので、本業のほうが疎かになっているを痛感している。2018年こそ、コードを書いていくぞ。やっぱりなんかしら、小さくてもいいので趣味Webサービスを出したいと思っている。&lt;/p&gt;

&lt;p&gt;最近、仮想通貨関連が熱いのでなんか出したいけど、いろいろ力不足なので周辺知識の吸収とともに、幅を広げていきたい。&lt;/p&gt;

&lt;p&gt;あと体の幅はもう広げたくない。ジム行こ。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>2017年フライト総括</title>
            <link>https://t32k.me/mol/log/matome-2017/</link>
            <pubDate>Sun, 31 Dec 2017 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/matome-2017/</guid>
            <description>&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/1231-00.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;年初に&lt;a href=&#34;https://t32k.me/mol/mol/log/new-years-resolutions-2017/&#34;&gt;SFC取得するぞ！&lt;/a&gt;と抱負に決めて、4月早々にこれを&lt;a href=&#34;https://t32k.me/mol/mol/log/2017-sfc-outro/&#34;&gt;果たしてしまい&lt;/a&gt;、若干燃え尽き症候群になったが、それでもSFCのメリットを享受するべく、取得後、3回の海外と1回の国内旅行をした。やはり、無料でラウンジは使用できるのありがたいし、取得前は優先レーンとかあまり期待してなかったけど、やっぱり気分がいいものである。特にラストのベトナム航空では無料プレミアムエコノミークラスアップグレードもあったし、幸先がいい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2月：&lt;a href=&#34;https://t32k.me/mol/mol/log/2017-sfc-jakarta/&#34;&gt;SFC修行：ジャカルタ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3月：&lt;a href=&#34;https://t32k.me/mol/mol/log/2017-sfc-bangkok/&#34;&gt;SFC修行：バンコク&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4月：&lt;a href=&#34;https://t32k.me/mol/mol/log/2017-sfc-sydney/&#34;&gt;SFC修行：シドニー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6月：&lt;a href=&#34;https://t32k.me/mol/mol/log/2017-sfc-hongkong/&#34;&gt;海外：香港&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;8月：海外：バンコク&lt;/li&gt;
&lt;li&gt;11月：国内：札幌&lt;/li&gt;
&lt;li&gt;12月：&lt;a href=&#34;https://t32k.me/mol/mol/log/vietnam-2017/&#34;&gt;海外：ホーチミン（ベトナム航空）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一瞬、JGCもとっちゃおうかと思ったけど、やっぱりスターアライアンス加盟会社のほうが好きなので、SFCだけで良いと思っている。それよりも来年はホテル系の上級会員を取ってみようかと思いつつ、国内旅行ももっと多くしたいなと思っている。&lt;/p&gt;

&lt;p&gt;あと、今年取得した17万マイルで初ヨーロッパを特典ファーストクラスで行ってみたいものである。あとまだ行っていない東南アジアの国々も行ってみたい。お金が足りませんね！&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>2017年買ってよかったもの</title>
            <link>https://t32k.me/mol/log/bestbuy-2017/</link>
            <pubDate>Sun, 31 Dec 2017 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/bestbuy-2017/</guid>
            <description>

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/ipad/00.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2016年の買ってよかったものは&lt;a href=&#34;https://t32k.me/mol/mol/log/listerine/&#34;&gt;リステリン紫&lt;/a&gt;だが、本当に優秀で、ここ二年、口内炎になってないのもこいつのおかげといえる。2017年も完全リステリン推しだったが、年末に急遽ランクインしてベストバイをかっさらったのは、iPad Pro + Smart Keyboardの組み合わせだ。&lt;/p&gt;

&lt;h2 id=&#34;がっつり作業はしない&#34;&gt;がっつり作業はしない&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/ipad/02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;基本的に軽量なノートPCはいつもほしいと思っていて、ここまでChromebookなり、いろいろ試してみた。自分の行動パターン的にカフェでコーディングとかしないし、勉強会でもTwitter実況とかしないので、軽さを考えるとMacBookがいいんだろうけど、そこまでちゃんとしたものはいらない。&lt;/p&gt;

&lt;p&gt;かといって、タブレットだけだと、それはそれで物足りないというか、少し文章を書きたい（旅先での日記とか）ときは、やはり物理キーボードがほしいところ。そこで、いつぞかもiPadとサードパーティーのキーボードカバーを買ってみたがタッチ感が悪かったり、重くなったり、統一性のなさから来るコレジャナイ感がある。&lt;/p&gt;

&lt;h2 id=&#34;脱着式のキーボード&#34;&gt;脱着式のキーボード&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/ipad/03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;やっぱりMacBookのシンプルさは捨てがたいと思うのだが、やはり安くても15万円以上はかかるので購入には躊躇する。あと飛行機の機内とかでおもむろにMacを取り出すのはダルいというか、使い勝手がわるい。やはり、キーボードがいらないときはタブレットだけで楽しみたいのだ。&lt;/p&gt;

&lt;p&gt;あと、サードパーティーのキーボードだとはめ込み式でがっちり固定されているものもあったりして、着脱がめんどうという点がある。&lt;/p&gt;

&lt;h2 id=&#34;ipad-pro-smart-keyboard&#34;&gt;iPad Pro + Smart Keyboard&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/ipad/01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;というわけで行き着いたのはこれでした。そもそも無印のiPadを持っていたのだけどこれは純正のスマートキーボードをつけれないので、また新たにiPad Proを買わなくてはならなかった。&lt;/p&gt;

&lt;p&gt;純正のキーボードは100点満点とは言えないが、及第点は超えているような感触のキーボード。あと脱着式が磁石で簡単でよい。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/ipad/04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;僕の場合は、飛行機の機内でエンターテイメントを楽しむためにAmazonプライムやNetflixでダウンロードしたコンテンツをiPadで見ている。このときはキーボード手荷物に預けていて鞄の中。そいで、現地のホテルについたらキーボードと一緒に使用して日記などを書く。これが実に自分の行動パターンに合っていて、これだよ！欲しかったモノは！と腑に落ちた。&lt;/p&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0736V1QHQ/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/41pzuyTeErL.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Apple iPad Pro 10.5インチ Wi-Fi 64GB MQDT2J/A [スペースグレイ]&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Apple(アップル)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B072MKYRHR/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/61oqBTv%2Be2L._SL1000_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Apple 10.5インチiPad Pro用 スマートキーボード/日本語 JIS/MPTL2J/A&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Apple(アップル)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;来年はこの組み合わせでもっと旅行に連れて行こうとおもう。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>グランクラスで帰省した（北陸新幹線E7系）</title>
            <link>https://t32k.me/mol/log/gran-class-2017/</link>
            <pubDate>Sat, 30 Dec 2017 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/gran-class-2017/</guid>
            <description>&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/00.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今日は飛行機じゃなくて、新幹線の話。&lt;/p&gt;

&lt;p&gt;新幹線の路線によっては&lt;a href=&#34;http://www.jreast-shinkansen.com/granclass/&#34;&gt;グランクラス&lt;/a&gt;というグリーン車よりも上のクラスの席がある。飛行機で言えばファーストクラスだろう。北海道・東北・北陸新幹線だと利用できる。&lt;/p&gt;

&lt;p&gt;いつものこの時期になると、&lt;a href=&#34;https://hokudev.doorkeeper.jp/&#34;&gt;北陸ディベロッパーズ交流会&lt;/a&gt;という名の忘年会のために帰省する。GW・お盆・年末年始など人が移動するのがわかっている、もとい、混雑するのが分かっているのに移動するのは基本的に嫌だ。心底嫌だ。しかし、忘年会のスケジュールは相手都合なので致し方ない。当然、年末の帰省ラッシュなんてのは人混みマックス状態なので、せめても回避するために今回はグランクラスを選択してみた。&lt;/p&gt;

&lt;p&gt;去年もそんな理由で北陸新幹線のグリーン車で帰省したが、まぁ普通というかグリーン車だよねという感想しかなかった。今回はグランクラスということで期待が上がる。せっかくのグランクラスなので、一分でも長く座っていたいと思う人が多いのか、北陸新幹線はくたか（停車駅多い、3時間以上かかる）のグランクラスシートはほぼ満席で、かがやき（停車駅少ない、最短の2時間半で東京ー金沢を結ぶ）の席ぐらいしか残ってなかった。とりあえず、2 - 1の1の席を手に入れたので東京駅に向かう。&lt;/p&gt;

&lt;p&gt;東京駅はほんとごった返している、新幹線のプラットフォームはもっとごった返している。新幹線の改札入ったらなんもスペースないので、みんなプラットフォームにいて、まともに動けない。&lt;/p&gt;

&lt;p&gt;あとで気づいたが、東京駅発のグランクラスだと&lt;a href=&#34;https://www.jreast.co.jp/card/first/viewgoldplus/vglounge/&#34;&gt;ビューゴールドラウンジ&lt;/a&gt;が利用できるらしい。とはいえ普通改札前などで、まぁあきらめた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;やっぱり人が多くて、車内の清掃が大変なのか出発2分前で寒いホームで待っていた。ここらへん飛行機のファーストクラスならありえないので、ちょっと残念なUX。&lt;/p&gt;

&lt;p&gt;18席あるシートは満席。金持ちそうな人ばかりだった。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;良いシート(・∀・)！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;二列側。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;シェル型になってるので全開に倒しても、後ろの人に迷惑かからない。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;いろいろ調節できる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/06.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;足元も広々！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/07.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;タダ！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/08.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;軽食うまー！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/09.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;軽食食べたら眠たくなって、居眠りしてしまいすぐに金沢駅についてしまった。もったいない。。。&lt;/p&gt;

&lt;p&gt;ちなみに、せっかくSFCになったので、&lt;a href=&#34;https://www.anaihghotels.co.jp/ihgrewardsclub/amc/sfc-list.html&#34;&gt;特典を利用&lt;/a&gt;するために、IHG系ホテルのANAクラウンプラザホテルに宿泊した。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/10.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;SFC特典、水とホッカイロとウェルカムドリンクと朝食券。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/11.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;金沢駅を見下ろす。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/granclass/12.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;よく眠れました。あと朝食ビュッフェの写真撮り忘れたけど、加賀野菜とかふんだんに使った地元料理も多く、かなりレベルが高かった。おすすめ。&lt;/p&gt;

&lt;p&gt;といわけで、かなり贅沢な帰省になってしまった。もちろん帰りの東京行きの新幹線は普通席を取って帰りました。飛行機に比べたら、新幹線の普通席も全然広いしずっと、パソコンとか開いていれるし、やっぱり飛行機のそれと比べると、そんなに無理しなくてもいいのかなと思ったりしなかったり。来年は何で帰ろうかな。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>ホーチミンに旅行してきた</title>
            <link>https://t32k.me/mol/log/vietnam-2017/</link>
            <pubDate>Sat, 23 Dec 2017 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/vietnam-2017/</guid>
            <description>

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/00.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;せっかくSFCを取得したので、どうせなら東南アジアの国全部訪れてみたいなと思い、今回はベトナムにいってみようと思う。&lt;/p&gt;

&lt;h2 id=&#34;ベトナム航空&#34;&gt;ベトナム航空&lt;/h2&gt;

&lt;p&gt;ベトナムに行くんだからベトナム航空でしょ！ということでチョイス。というのアレでたまたま良いタイミングでセールをやっていたのと、ANAとのコードシェア便であればSFCの特典を享受できるっぽい（ベトナム航空はスターアライアンスではなくスカイチーム）ので選んでみた。まぁ単純にいろんな航空会社に乗ってみたいよね。&lt;/p&gt;

&lt;p&gt;ということで、ホーチミンにレッツゴー。&lt;/p&gt;

&lt;h2 id=&#34;京成線&#34;&gt;京成線&lt;/h2&gt;

&lt;p&gt;VN301便が成田9:30発なので、初めて前日入りなるものをしてみる。時間にゆとりがあるので、今まで使ったことないスカイライナーでも乗ってみるかと思い、上野に向かう。&lt;/p&gt;

&lt;p&gt;京成上野駅に19時くらい付くと、イブニングライナーのチケットはこちらみたいな誘導している。オレの乗りたいのはスカイライナーなんだ！イブニングではない！と内心思ったけど、まぁ夕方のスカイライナーのことをそう言ってるんだろうと思ってチケット買ったが、どうも心配で改札の駅員さんに聞いたら、今の時間だとアクセス特急が良いですよと言われた。また新しい単語だ。。。と内心思ったが、じゃそれ乗る！ってことで乗ったけど、普通車両だった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;スカイライナー：スカイライナーの車両で成田スカイアクセス線を走るやつ&lt;/li&gt;
&lt;li&gt;モーニング・イブニングライナー：スカイライナーの車両で京成本線を走るやつ&lt;/li&gt;
&lt;li&gt;アクセス特急：普通の車両で成田スカイアクセス線を走るやつ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あとで調べたら、こうゆうことらしい。別に急いではなかったけど、指定席でゆったりと行きたかったものである。&lt;/p&gt;

&lt;h2 id=&#34;ホテル日航成田&#34;&gt;ホテル日航成田&lt;/h2&gt;

&lt;p&gt;Agodaでそれなりに安かったやつ。成田空港のバス乗り場からシャトルバスが20分間隔くらいで出てる。バスで10分くらいで着く。一階にローソンがあって便利だった。外国人の宿泊者が多かった気がする。&lt;/p&gt;

&lt;h2 id=&#34;プレミアムエコノミーへのご変更&#34;&gt;プレミアムエコノミーへのご変更&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;無事朝ちゃんと起きれたので行きと同じくシャトルバスで空港へ向かう。ベトナム航空のカウンター前についた。スターアライアンスだとSFC優先チェックインできるけど、それっぽいアナウンスもされてなかったので、案内係をしているおねーさんに聞いてみると、もちろん使えますよとのこと。ということで、スカイプライオリティのカウンターへ！&lt;/p&gt;

&lt;p&gt;荷物を預けると優先タグをつけてもらい、ラウンジの案内もされた。さらにはプレミアムエコノミー席に空きがあるということで無料のアップグレードまでしてもらった。そこまでは予想してなかったので嬉しかった。セールで買ったので往復で5万くらいだったのにプレエコまでのさせてもらいほんとすみませんって感じだ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ラウンジはデルタラウンジを案内された。スターアライアンス会員なのにスカイチームのラウンジに入るのは不思議な感じだ。ラウンジは広くてよかったが、食べ物がパンばかりだったのが残念。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;プレエコのシートは全席モニターがアームレストに収納されてあるタイプだった。ずっとiPad ProにいれたAmazon Primeビデオの動画を見てたので機内エンターテイメントは見なかった。あとデフォルトでリクライニング担ってるのかと思うくらいな傾斜角だったｗ隣の人もいなくて、快適な空の旅だった。B787の最新機もいい。&lt;/p&gt;

&lt;h2 id=&#34;タンソンニャット国際空港&#34;&gt;タンソンニャット国際空港&lt;/h2&gt;

&lt;p&gt;ホーチミンにつくと、気温30度くらいで東南アジア来たなって感じる。あと、ベトナムは入国書類を書かなくてよいらしく、いつも機内でボールペン忘れた！ってならないのはよい。というわけでイミグレではパスポートを渡すだけでよい。&lt;/p&gt;

&lt;p&gt;それが終わるとSIMカード購入とATMで現地通貨カードキャッシングのルーチンをする。キャッシングはドンの単位が大きいというか、100万ドン＝約5000円なので、ATMに入力するゼロの数が多くてビビる。&lt;/p&gt;

&lt;p&gt;SIMはVIETMLというところで買ったけど、ほかのところではタクシーチケットと一緒に販売してるので、そっちでも買ってもよいかもしれない。ただ呼び込みが激しいので、うさんくさいというか斜めに構えてしまう。されどもターミナル出れば人混みがすごいので、ここでタクシーチケットを買っといたほうが安全だろうと思い購入。22万ドンだった。メータータクシーでぼったくらなければ15〜18万ドンくらいって事前に調べたら書いてあったので、まぁ割高かも知れないが仕方がない。&lt;/p&gt;

&lt;p&gt;チケットを買うと、領収書みたいなの渡されて10番出口へ行けと言われたのでテクテク歩いてると、インカム付けたあんちゃんから、タクシー？と聞かれ、なされるがままタクシーに誘導される。この人がさっき買ったタクシーチケットの会社の人かどうかわからなくて、不安なまま乗ったが結果的には大丈夫だった。フィリピンとかタクシーでいい思い出がないので、疑いまくって、ノーマニーだからな！オレ払わないからな！とタクシーの誘導かかりに言ってしまったくらいだｗおっちゃんも、お、おう。みたいなリアクションだった。&lt;/p&gt;

&lt;p&gt;とりま、外は魑魅魍魎のごとくぼったくりタクシーが多いので気をつけたほうがよい。&lt;/p&gt;

&lt;h2 id=&#34;カラベルサイゴン&#34;&gt;カラベルサイゴン&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ドンコイ通りという活気のある通り沿いにあるので立地は最強。市民劇場の隣。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;朝食のレベルが高かった。フォーやバインミーが食べれる。２日続けてバインミー食べた。&lt;/p&gt;

&lt;h2 id=&#34;徒然なるままに&#34;&gt;徒然なるままに&amp;hellip;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/06.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;有名な市民劇場。フレンチ・コロニアル様式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/07.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;宿泊ホテルと市民劇場の間は地下鉄工事中。市内、多くの場所でこうゆう工事現場見かけた。2020年には完成なので、またそのとき使ってみたい。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/08.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;町並みがオシャレ、交通量が多いのは残念。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/09.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;サイゴン大教会。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/10.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;聞いてはいたけど、バイクほんと多い。みんなマスクしてた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/11.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ズラ～っとな。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/12.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;でも公園とか緑おおい。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/13.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;フォー！食事は下記の記事を見てチェーン店を選んだけど、どれもおいしかった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gucci-vietnam.com/vietnamese-restaurant-chain&#34;&gt;旅行者でも気軽に入れる♪ベトナム料理のチェーン店6店&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/14.jpg&#34; alt=&#34;Trung Nguyen Coffee&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ベトナムコーヒーとか。チュングエンコーヒーというベトナム最王手のお店らしい。コーヒー器具とかもオシャレでいっぱい買い物した。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/15.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ドバイっぽいビルとかもあった。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/16.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ホーチミン人民委員会庁舎前&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/17.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;サークルK多かった。&lt;/p&gt;

&lt;h2 id=&#34;帰国&#34;&gt;帰国&lt;/h2&gt;

&lt;p&gt;最終日は香辛料がだめだったのか、とてつもない下痢で、ずっとホテルで寝込んでた。ホテルのレビューを見てみると無料でレイトチェックアウトできるっぽいことが書いてあったので、頼んでみたら、13時ならOKよと言われたけど、帰国が深夜フライトであったり、お腹の調子も良くないので、18時でプラス90USD払ってレイトチェックアウトしてもらった。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/18.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;帰りもSFC特典をフルに使い、優先チェックインからのベトナム航空のラウンジであるロータスクラブを利用した。ただ、フライトが同時刻なのが多いのか、座る席がぜんぜんないほどごった返していた。これなら普通の待合席にいたほうが人口密度低いわと思い、早々に抜け出した。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/vietnam/19.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;帰りは、普通のエコノミーでした。まぁ当たり前か。アイマスクとマスクとボールペンとSIMの取り替えのピンを忘れないようにしようと思った機内だった。&lt;/p&gt;

&lt;p&gt;帰りは成田エクスプレスで東京駅まで言ったけど、ホームが地下５階とかで上がってくるの大変だった。とりあえず今回の度はいろいろ課題が多かった気がする。。。反省。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>12人で「銀行」をつくってみた</title>
            <link>https://t32k.me/mol/log/978-4478083963-jnb/</link>
            <pubDate>Mon, 11 Dec 2017 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/978-4478083963-jnb/</guid>
            <description>&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4478083967/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/51thPCz47qL._SX344_BO1,204,203,200_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;12人で「銀行」をつくってみた&lt;br&gt;「いつでも、どこでも」、便利な日本初のネット銀行はこうしてできた。&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;岡田 晴彦&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;最近のFinTechは銀行業務（融資とか決済とか）をアンバンドリング（切り出し）して、サービスを成り立たせているが、この本の話は、銀行そのものをつくった話。ただの銀行ではなく、インターネット専業銀行である。&lt;/p&gt;

&lt;p&gt;今でこそ、ネットを介していろいろなサービスを利用することは普通になってきてるが、本書の主役であるジャパンネット銀行が設立された2000年当初は、インターネットがようやく普及しはじめたという時代だ(17年前何してただろう..iモードとか？)。そのころから店舗を持たないインターネット専業の銀行を作ろうとしたのは、よほどの先見性やチャレンジ精神を併せ持っていたのだろうと感心する。&lt;/p&gt;

&lt;p&gt;信頼の塊みたいな銀行を店舗をもたないでやることでどうやって信頼を担保するのか？と思いがちだが、結局は、実利は信頼に勝るということだと本書を読んで理解した。もちろん、セキュリティなど基本的な基盤は普通の銀行もネット銀行もちゃんとしなければいけないが、ジャパンネット銀行が普及したきっかけはヤフオクとの提携が大きかったと知って、いくら、これからはインターネットだとか、ネットだからいつでも利用可能とか抽象的な美辞麗句を述べても、ピンと来ないのだ。&lt;/p&gt;

&lt;p&gt;それよりも、ジャパンネット銀行を使うとヤフオクの支払いがスムーズというファクトが大切だと理解した。結局、今の時代も仮想通貨という目に見えない通貨に対して、あれやこれや言われているが、決済手数料や送金手数料がほとんどかからないとかそうゆう実利が浸透していけば、おのずと普及していくんだろうなと思った。&lt;/p&gt;

&lt;p&gt;あと、当時はネット銀行は普通の銀行に比べてシンプルで使いやすい、時代の最先端みたいな論調で書かれているけど、今現在みてみると、文字は多いし、なんか色々取り扱っている金融商品は多いし、全然シンプルじゃないよねと思った。FinTechのさきがけと言われるネット銀行だけど、時代はもっと便利でシンプルなのを求めているのかもしれない。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>2017年買ったヘッドホンとか</title>
            <link>https://t32k.me/mol/log/the-best-wireless-headphones-2017/</link>
            <pubDate>Sun, 10 Dec 2017 00:00:00 UTC</pubDate>
            
            <guid>https://t32k.me/mol/log/the-best-wireless-headphones-2017/</guid>
            <description>

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/1210-00.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2017年買ってよかったモノとかやりたかったのだけど、今年はイヤホンばっかり買ったような気がするので、せっかくなので過程を紹介したい。&lt;/p&gt;

&lt;h2 id=&#34;1月-beats-powerbeats3-wireless&#34;&gt;1月: Beats Powerbeats3 Wireless&lt;/h2&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B01LWD47K3/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/71goJTEKktL._SL1500_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Beats by Dr.Dre ワイヤレスイヤホン PowerBeats3 密閉型 Bluetooth対応 カナル型 耐汗 防沫 ブラック ML8V2PA/A&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Beats by Dr.Dre&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;年始の1月にフィットネスジム用に購入。ホールド感もしっかりで激しい運動には適している（そんなに動かないけど）。ただ、耳掛けの部分が合ってないのか、ちょっと長時間つけていると耳が痛くなるので、あくまでジム用にした。音質的にはまぁこんなもんだろう。W1チップ初搭載のイヤホンでiPhoneの連携もよい。&lt;/p&gt;

&lt;h2 id=&#34;2月-beatsx&#34;&gt;2月: BeatsX&lt;/h2&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01LW6TXGV/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/718WV1sKl8L._SL1500_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Beats by Dr.Dre ワイヤレスイヤホン BeatsX 密閉型 Bluetooth対応 ブラック MLYE2PA/A&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Beats by Dr.Dre&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://t32k.me/mol/log/beatsx/&#34;&gt;BeatsX イヤフォンを購入した - MOL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2月にBeatXが発売され、AppleのCMもおしゃれでつい購入したが、上記の記事で言及したとおりケーブルがダブつく感じで不快だったので、徐々に使わなくなった。&lt;/p&gt;

&lt;h2 id=&#34;3月-bose-quietcontrol-30-wireless&#34;&gt;3月: Bose QuietControl 30 wireless&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/1210-01.jpg&#34; alt=&#34;&#34; /&gt;
&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01G16PY2A/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/61mKNHUnNNL._SL1327_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Bose QuietControl 30 wireless headphones ワイヤレスノイズキャンセリングイヤホン ブラック&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Bose(ボーズ)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;友達の何人か購入してて、好評っぽいので購入したかったが、何ぶん3万オーバーなので躊躇していた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://t32k.me/mol/log/2017-sfc-bangkok/&#34;&gt;【SFC修行&amp;rsquo;17】 第二章 バンコク編 - MOL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SFC修行中の副産物というか、3月にバンコクへ行ったときの国際線機内販売で免税扱いになり、かつANAカード支払いで10%OFFというラッキー価格3万円未満で購入できた。&lt;/p&gt;

&lt;p&gt;さすがのノイズキャンセリング性能でよかったので、常用のヘッドホンとなった。&lt;/p&gt;

&lt;h2 id=&#34;9月-bose-soundlink-revolve-bluetooth-speaker&#34;&gt;9月: Bose SoundLink Revolve Bluetooth speaker&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/1210-02.jpg&#34; alt=&#34;&#34; /&gt;
&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B06Y3PCMPR/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/A1MD%2Btz%2B6rL._SL1500_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Bose SoundLink Revolve Bluetooth speaker ポータブルワイヤレススピーカー トリプルブラック&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Bose(ボーズ)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;時は移り、9月。家でいい音が聞きたくて購入。うん、いいんじゃないでしょうか。&lt;/p&gt;

&lt;h2 id=&#34;10月-apple-airpods&#34;&gt;10月: Apple AirPods&lt;/h2&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01N2VMGT6/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/311k6OfaSdL.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Apple AirPods 完全ワイヤレスイヤホン Bluetooth対応 マイク付き MMEF2J/A&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Apple(アップル)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;イヤホンに戻って、完全ワイヤレスってのにも憧れがあって、買ってみたのだけど。今までずっとインイヤーというか、イヤピースがあるのが当たり前だったので、AirPodsはスカスカ感というか、すぐ外れそうで気になって仕方がない。これはダメだと思い、すぐに返品してしまった。&lt;/p&gt;

&lt;p&gt;ただ、イヤホンを耳から外すと音楽が止まるなどiPhoneとの連携まじ半端ないと思った。&lt;/p&gt;

&lt;h2 id=&#34;10月-bose-soundsport-free-wireless-headphones&#34;&gt;10月: Bose SoundSport Free wireless headphones&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/1210-04.jpg&#34; alt=&#34;&#34; /&gt;
&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B074TBPV5Z/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/71mi0QkRETL._SL1408_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Bose SoundSport Free wireless headphones 完全ワイヤレスイヤホン トリプルブラック&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Bose(ボーズ)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;といわけで、完全ワイヤレスでイヤピースがついてるのがBoseから発売されるので即購入。うーん、可もなく不可もない感じの印象だが、しばらく使ってた。&lt;/p&gt;

&lt;p&gt;これはBoseだからというわけでないんだけど、完全ワイヤレスのイヤホンに言えることだけど、イヤホンを外すとき、机なりどっかに置かないとダメなんだよね。普通のイヤホンみたいに首から下げられないんだー！！ってことに買ってから気づいた。これが地味に不便で、作業中に誰かから話しかけらたとき、一時イヤホンを取って会話をして、終わってつけようと思うと、あれ？どこいった？みたいなことが二回くらいあった（机の下に落ちてた）。&lt;/p&gt;

&lt;p&gt;また地味に充電器のケースに入れるのもめんどくさいし、ケースも持ち運ぶのもめんどくさい。&lt;/p&gt;

&lt;h2 id=&#34;11月-google-home&#34;&gt;11月: Google Home&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://t32k.me/mol/mol/images/2017/1210-03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;閑話休題で、ノリでGoogle Homeを購入した。音声コマンドに興味があったのでGoogle Home Miniで十分よかったのだけど、大きいほうのが先に発売ということで購入した。それが思った以上に音質がよくてビビる。たしかにBose SoundLinkのほうが、音質はいいのだけど、どうせ『ねぇGoogle!音楽つけて』というとGoogle Homeから流れるので、圧倒的にGoogle Homeを使うようになってしまった。Chromecast Audioを使えば、Google
HomeからBoseに音楽を流せれるのだけど、そこまでする必要も感じられない。&lt;/p&gt;

&lt;h2 id=&#34;12月-beatsx&#34;&gt;12月: BeatsX&lt;/h2&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01LW6TXGV/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/718WV1sKl8L._SL1500_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;Beats by Dr.Dre ワイヤレスイヤホン BeatsX 密閉型 Bluetooth対応 ブラック MLYE2PA/A&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;Beats by Dr.Dre&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;で、完全ワイヤレスは合わないということを理解したので、BoseのQC30に戻ろうかなと持ったけど、あれはあれで首にいすわってる感が強くて、肩がこる。んで、考えた結果、BeatsXにまた戻ってきた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp//dp/B01GDJNF3A/?tag=warikiru-22&#34;&gt;サードパーティのイヤピース&lt;/a&gt;買えば、ピッタリフィットし、静音性も高められるし、なによりケーブルのダブつきのせいで耳から外れることがない！&lt;/p&gt;

&lt;p&gt;ということで、僕が本当に欲しかったのはBeatsX + イヤピースだと理解した師走だった。&lt;/p&gt;

&lt;h2 id=&#34;2018年-sony-wh-1000xm2&#34;&gt;2018年: SONY WH-1000XM2&lt;/h2&gt;

&lt;div class=&#34;__media&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0756KQ4JH/?tag=warikiru-22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/61ZU1Gt9quL._SL1000_.jpg&#34; alt=&#34;&#34; class=&#34;__media__image&#34;&gt;
&lt;div class=&#34;__media__body&#34;&gt;
    &lt;div&gt;ソニー SONY ワイヤレスノイズキャンセリングヘッドホン WH-1000XM2 : ハイレゾ/Bluetooth対応 最大30時間連続再生 密閉型 マイク付き 2017年モデル ブラック WH-1000XM2 B&lt;/div&gt;
    &lt;div class=&#34;__media__text&#34;&gt;ソニー(SONY)&lt;/div&gt;
    &lt;div&gt;Amazon.co.jpで詳細を見る&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;あとは、CA勢に人気のこれ買えば、一通りコンプリートできそう。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>