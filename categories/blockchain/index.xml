<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blockchain on MOL</title>
    <link>https://t32k.me/mol/categories/blockchain/</link>
    <description>Recent content in Blockchain on MOL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 03 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://t32k.me/mol/categories/blockchain/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ブロックチェーンとマイニング</title>
      <link>https://t32k.me/mol/log/how-bitcoin-mining-works/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://t32k.me/mol/log/how-bitcoin-mining-works/</guid>
      <description>この記事は、ブロックチェーン Advent Calendar 2017の3日目です、たぶん、知らんけど。なんだか前の人と記事の内容が被ってる気もするが、がんばってやっていき。
Proof of Work みんな、マイニングしてるか！僕はイーサリアムだけどちょっとやってた。ブロックチェーンはその名の通り、ある程度のトランザクション情報をまとめたブロックをチェーンのように繋いでいく分散型台帳システム。
そのブロックを繋げる際に、ビットコインであればproof of work（PoW）というコンセンサス（合意）アルゴリズムを採用しているので、莫大な計算量（Work）を用いて、新たに台帳に記載されるブロックが正しいかどうか承認する作業（Proof）が行われる。
この作業を一番早く正しく終えた人が、その報酬として一定量のビットコイン(2017年現在：12.5BTC)とブロックに含まれるすべてのトランザクション手数料を貰えることができるので、この作業を金の採掘に例えてマイニングと言っている。
なぜ、このような事をするのかというと、前述の通りブロックチェーンは分散台帳なので、誰でも手元にダウンロードすることができ、もし悪意のある誰かが自分のアドレスに100BTC振り込むといった偽の情報をブロックに入れたとしたら大変。しかし、そのような偽のチェーンはマイニングするのは、微々たる計算量しかもたない、その人しかおらず、チェーンを続けることはできないので、正当性のあるチェーンだけが生き残る算段。
中央集権的なデータベースであれば、このようなマイニングをする必要はないが、特定の誰か（個人・企業）を信じなければならいし、その人が善人であったとしても、また他の誰かからハッキングされるかもしれない。それに比べて、ブロックチェーンであれば誰も信頼する必要がないし、 マイニング報酬というインセンティブで多くのマイナーが計算量を提供しシステムを維持しているので改ざんは極めて困難だ。
と、こんなことぜんぜん分からなくても、僕自身イーサリアムでマイニングしてたので問題はないんだけど、もうちょっと技術的に理解したいと思い、積読してあったマスタリングビットコインを読んでみたよ。
Mastering Bitcoin
ビットコインとブロックチェーン:暗号通貨を支える技術 アンドレアス・M・アントノプロス Amazon.co.jpで詳細を見る   Cryptographic Hash Functions マイニングで計算、計算って言ってるけど、実際に何してるのってことで、ハッシュ関数をいっぱい実行している。
 ハッシュ関数 (ハッシュかんすう、英: hash function) あるいは要約関数とは、あるデータが与えられた場合にそのデータを代表する数値を得る操作、または、その様な数値を得るための関数のこと。ハッシュ関数から得られた数値のことを要約値やハッシュ値または単にハッシュという。
 Wikipediaはかくゆう。
実際に動かしたほうが早いので、Node.jsのcryptoモジュールを使って、t32kという文字列をハッシュ化してみる。
const crypto = require(&#39;crypto&#39;); const shas256 = crypto.createHash(&#39;sha256&#39;); shas256.update(&#39;t32k&#39;); const hash = shas256.digest(&#39;hex&#39;); console.log(hash); &amp;gt;&amp;gt; 69511c70d742fda9555512fea208338e1c49cb3e9ab0a1e3246e262952517806  ビットコインではSHA-256（Secure Hash Algorithm）を用いて、ハッシュ化されるので、t32kの元データが64文字の16進数文字列に変換された。これは何回実行したところでt32kの文字列は69511c7...の同じハッシュ値である。
また変換する文字列t32kから、t33kに変更してみると以下のようハッシュ値ができあがる。
&amp;gt;&amp;gt; 719e66ad70e70e39b9627ec4fd5dfb8a7015c3be5ac35f48c4d3a60b8aeed4f9  たった一文字だけ違うのに、全く異なるハッシュ値ができあがるので、生成されたハッシュ値から元データを推測するのは困難であり、暗号数理的性質をもつ。
では、ビットコインのマイニングでハッシュ関数はどのように使われてるか見てみる前に、ここではマイニングをチョー簡略化した例をやってみよう。
t32kの文字列のお尻に数字を付けてインプットとし、出来上がるハッシュ値の先頭が0で始まる数字を見つけることにする。
試しに0~9の数値で試してみることにする。
const crypto = require(&#39;crypto&#39;); let n = 0; while (n &amp;lt; 10) { const shas256 = crypto.</description>
    </item>
    
  </channel>
</rss>